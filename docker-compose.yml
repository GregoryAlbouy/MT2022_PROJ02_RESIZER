version: '3'

services:
  mysql:
    container_name: goshrink_mysql
    build:
      context: ./build/mysql
      dockerfile: mysql.Dockerfile
    restart: always
    environment:
      - MYSQL_DATABASE
      - MYSQL_USER
      - MYSQL_PASSWORD
      - MYSQL_ROOT_PASSWORD
      - MYSQL_PORT
      - MYSQL_VOLUME_PATH
    networks: [goshrink]
    ports: ["${MYSQL_PORT}:${MYSQL_PORT}"]
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "mysql"]
      interval: 5s
      timeout: 5s
      retries: 12 
    # volumes:
    #   - dbdata: "mysql/volume:/var/lib/mysql"

  adminer:
    container_name: goshrink_adminer
    depends_on: 
      mysql:
        condition: service_healthy
    image: adminer
    networks: [goshrink]
    restart: always
    ports: [8085:8080]

  rabbitmq:
    container_name: goshrink_rabbitmq
    image: rabbitmq:3-management
    networks: [goshrink]
    ports: [5672:5672, 15672:15672]   
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "status"]
      interval: 5s
      timeout: 5s
      retries: 24

  server:
    container_name: goshrink_server
    depends_on: 
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    build:
      context: "."
      dockerfile: ./build/server.Dockerfile
    networks: [goshrink]
    ports: ["${API_SERVER_PORT}:${API_SERVER_PORT}"]
    # command: ["./wait-for-it.sh", "mysql:3306", "-s", "--", "server"]

  storage:
    container_name: goshrink_storage
    build:
      context: "."
      dockerfile: ./build/storage.Dockerfile
    networks: [goshrink]
    ports: ["${STORAGE_SERVER_PORT}:${STORAGE_SERVER_PORT}"]

  worker:
    container_name: goshrink_worker
    build: 
      context: "."
      dockerfile: ./build/worker.Dockerfile
    depends_on: 
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks: [goshrink]

networks:
  goshrink:
    driver: bridge
